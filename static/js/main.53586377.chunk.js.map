{"version":3,"sources":["hooks/useTSelector.ts","common/intarfaces/User.ts","services/firebaseService.ts","store/actionCreators/user.ts","services/tvmazeService.ts","store/actionCreators/search.ts","store/actionCreators/serial.ts","store/actionCreators/index.ts","hooks/useActions.ts","components/MainBar/index.ts","components/MainBar/MainBar.tsx","pages/NewsPage/index.tsx","pages/NewsPage/NewsPage.tsx","components/Filter/index.ts","components/Filter/Filter.tsx","components/Search/index.ts","components/Search/Search.tsx","components/SerialCard/index.ts","components/SerialCard/SerialCard.tsx","tools/Filters.ts","layouts/SeriesList/index.ts","layouts/SeriesList/SeriesList.tsx","pages/SearchSeriesPage/index.ts","pages/SearchSeriesPage/SearchSeriesPage.tsx","components/Button/index.ts","components/Button/Button.tsx","components/UserCard/index.ts","components/UserCard/UserCard.tsx","layouts/UserList/index.ts","layouts/UserList/UserList.tsx","pages/SearchUserPage/index.ts","pages/SearchUserPage/SearchUserPage.tsx","layouts/SerialLayout/index.ts","layouts/SerialLayout/SerialLayout.tsx","pages/SerialPage/index.ts","pages/SerialPage/SerialPage.tsx","components/Input/index.ts","components/Input/Input.tsx","common/shemes/registerShema.ts","common/shemes/loginShema.ts","components/Title/index.ts","components/Title/Title.tsx","components/Text/index.ts","components/Text/Text.tsx","components/SignInForm/index.ts","components/SignInForm/SignInForm.tsx","pages/SignInPage/index.ts","pages/SignInPage/SignInPage.tsx","components/SignUpForm/index.ts","components/SignUpForm/SignUpForm.tsx","pages/SignUpPage/index.ts","pages/SignUpPage/SignUpPage.tsx","layouts/UserAccount/index.ts","layouts/UserAccount/UserAccount.tsx","pages/UserPage/index.ts","pages/UserPage/UserPage.tsx","App.tsx","store/reducers/serialReduser.ts","store/reducers/searchlReduser.ts","store/reducers/userReduser.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["useTSelector","useSelector","User","id","name","imageURL","serialIDs","actorIDs","friendIDs","news","this","app","initializeApp","apiKey","authDomain","projectId","messagingSenderId","appId","measurementId","databaseURL","auth","getAuth","db","getDatabase","signUp","email","password","onUpdate","a","createUserWithEmailAndPassword","authRes","user","uid","localStorage","setItem","JSON","stringify","set","ref","onValue","snap","val","signIn","signInWithEmailAndPassword","get","child","exists","Error","searchUsers","usersObj","userArr","filters","key","every","f","push","length","firebaseService","signOut","removeItem","onAuthChanged","func","onAuthStateChanged","addSerial","serialID","update","removeSerial","filter","el","addFriend","me","userID","removeFriend","userId","setCurrentUser","dispatch","type","payload","setUser","getSerialURL","seriesByPageURL","LIMIT","res","i","fetch","response","json","s","tvmazeService","searchSeries","getSerialById","searchSerials","series","users","getSerialbyId","serial","UserActionCreators","SerialsSearchActionCreators","SerialActionCreator","useActions","useDispatch","bindActionCreators","ActionCreators","MainBar","children","className","props","history","useHistory","color","size","onClick","NewsPage","Filter","by","selected","setSelected","handleClick","useCallback","e","text","target","innerText","includes","components","map","Search","error","placeholder","SerialCard","image","genres","rating","ratingComponent","state","src","alt","join","nameFilter","obj","serialNormalName","toLowerCase","normalName","startsWith","genresFilter","serialG","g","normalG","some","SeriesList","useState","setName","setGenres","search","useEffect","console","log","onChange","value","medium","average","SearchSeriesPage","Button","label","btnType","UserCard","isFriend","isMe","stopPropagation","UserList","u","SearchUserPage","pathname","useLocation","split","slice","SerialLayout","isLiked","original","dangerouslySetInnerHTML","__html","summary","SerialPage","loading","parseInt","Input","registerShema","Yup","min","required","max","password2","oneOf","loginShema","Title","Text","SignInForm","onFormSubmit","initialValues","validationSchema","onSubmit","as","SignInPage","SignUpForm","SignUpPage","UserAccount","UserPage","App","userStr","getItem","parse","exact","path","component","initialState","actors","currentUser","rootReduser","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53586377.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { RootState } from \"../store/reducers\";\n\n export const useTSelector: TypedUseSelectorHook<RootState> = useSelector","export class User {\n  id: string\n  name: string\n  imageURL: string | null\n  serialIDs: string[]\n  actorIDs: string[]\n  friendIDs: string[]\n  news: {userID: number, serialID: number}[]\n\n  constructor(\n    id: string, \n    name: string,\n    imageURL = null,\n    serialIDs = [],\n    actorIDs = [],\n    friendIDs = [],\n    news = []\n    ) {\n    this.id = id\n    this.name = name\n    this.imageURL = imageURL\n    this.serialIDs = serialIDs\n    this.actorIDs = actorIDs\n    this.friendIDs = friendIDs\n    this.news = news\n  }\n}","import { initializeApp } from \"firebase/app\"\nimport { getDatabase, ref, set, get, child, update, remove, onValue } from \"firebase/database\"\nimport { \n  createUserWithEmailAndPassword, \n  getAuth, \n  signInWithEmailAndPassword,\n  onAuthStateChanged\n} from \"firebase/auth\"\nimport { Filter, User } from \"../common/intarfaces\"\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyBUMloGU8stnSbFWe38XJXHj_Eqz-dzRJ8\",\n  authDomain: \"movie-tracker-ce0ff.firebaseapp.com\",\n  projectId: \"movie-tracker-ce0ff\",\n  messagingSenderId: \"1068318498783\",\n  appId: \"1:1068318498783:web:342f903d978eed52acae6a\",\n  measurementId: \"G-JCTS9HDTG9\",\n  databaseURL: 'https://movie-tracker-ce0ff-default-rtdb.europe-west1.firebasedatabase.app'\n})\n\nconst auth = getAuth(app)\nconst db = getDatabase()\n\nconst signUp = async(\n  name: string, \n  email: string, \n  password: string, \n  onUpdate: (user: User) => void\n  ) => {\n  const authRes = await createUserWithEmailAndPassword(auth, email, password)\n  const id = authRes.user.uid\n  const user = new User(id, name)\n  \n  localStorage.setItem('user', JSON.stringify(user))\n  await set(ref(db, 'Users/' + id), user)\n  \n  onValue(ref(db, 'Users/' + id), snap => {\n    onUpdate(snap.val() as User)\n  })\n}\n\nconst signIn = async(\n  email: string, \n  password: string,\n  onUpdate: (user: User) => void\n  ) => {\n  const authRes = await signInWithEmailAndPassword(auth, email, password)\n  const id = authRes.user.uid\n  const user = await get(child(ref(db), 'Users/' + id))\n\n  localStorage.setItem('user', JSON.stringify(user))\n  if (!user.exists()) throw Error(\"User don't esists\")\n\n  onValue(ref(db, 'Users/' + id), snap => {\n    onUpdate(snap.val() as User)\n  })\n}\n\nconst addSerial = (user: User, serialID: string) => {\n  const serialIDs = [...(user.serialIDs ?? []), serialID]\n  return update(ref(db, \"Users/\" + user.id), {serialIDs})\n}\n\nconst removeSerial = (user: User, serialID: string) => {\n  const serialIDs = user.serialIDs.filter(el => el !== serialID)\n  return update(ref(db, \"Users/\" + user.id), {serialIDs})\n}\n\nconst addFriend = (me: User, userID: string) => {\n  const friendIDs = [...(me.friendIDs ?? []), userID]\n  return update(ref(db, \"Users/\" + me.id), {friendIDs})\n}\n\nconst removeFriend = (me: User, userId: string) => {\n  const friendIDs = me.friendIDs.filter(f => f !== userId)\n  return update(ref(db, \"Users/\" + me.id), {friendIDs})\n}\n\nconst searchUsers = async(...filters: Filter<User>[]) => {\n  const usersObj = await (await get(child(ref(db), 'Users/'))).val()\n  const userArr = []\n\n  for(let key in usersObj) {\n    const user = usersObj[key]\n    if (filters.every( f => f(user) )) userArr.push(user)\n    if (userArr.length >= 40) break\n  }\n\n  return userArr as User[]\n}\n\nconst signOut = () => {\n  auth.signOut()\n  localStorage.removeItem('user')\n}\nconst onAuthChanged = (func: any) => onAuthStateChanged(auth, func)\n\nconst firebaseService = {\n  signUp,\n  signIn,\n  signOut,\n  onAuthChanged,\n  addSerial,\n  removeSerial,\n  searchUsers,\n  addFriend,\n  removeFriend,\n}\n\nexport default firebaseService","import { async } from \"firebase/node_modules/@firebase/util\";\nimport { Dispatch } from \"react\";\nimport { SignUpValues, User } from \"../../common/intarfaces\";\nimport { SignInValues } from \"../../common/intarfaces\";\nimport firebaseService from \"../../services/firebaseService\";\nimport { UserAction } from \"../types/user\";\n\nexport const setCurrentUser = (user: User) => \nasync(dispatch: Dispatch<UserAction>) => {\n  dispatch({type: \"FETCH_CURRENT_USER_SUCCESS\", payload: user})\n}\n\nexport const setUser = (user: User) => \nasync(dispatch: Dispatch<UserAction>) => {\n  dispatch({type: \"FETCH_USER_SUCCESS\", payload: user})\n}\n\nexport const signUp = ({name, email, password}: SignUpValues) => \nasync (dispatch: Dispatch<UserAction>) => {\n  try {\n    dispatch({type: \"FETCH_USER\"})\n    await firebaseService.signUp(name, email, password, user => {\n      dispatch({type: \"FETCH_USER_SUCCESS\", payload: user})\n    })    \n  } catch (error) {\n    dispatch({type: \"FETCH_USER_ERROR\", payload: error})\n  }\n}\n\nexport const signIn = ({email, password}: SignInValues) => \nasync (dispatch: Dispatch<UserAction>) => {\n  try {\n    dispatch({type: \"FETCH_USER\"})\n    const user = await firebaseService.signIn(email, password, user => {\n      dispatch({type: \"FETCH_USER_SUCCESS\", payload: user})\n    })\n  } catch (error) {\n    dispatch({type: \"FETCH_USER_ERROR\", payload: error})\n  }\n}\n\nexport const signOut = () => \nasync (dispatch: Dispatch<UserAction>) => {\n  try {\n    dispatch({type: \"FORGET_USER\"})\n    await firebaseService.signOut()\n  } catch (error) {\n     dispatch({type: \"FETCH_USER_ERROR\", payload: error})\n  }\n}\n\nexport const addFriend = (me: User, userId: string) => \nasync () => {\n  await firebaseService.addFriend(me, userId)\n}\n\nexport const removeFriend = (me: User, userId: string) => \nasync () => {\n  await firebaseService.removeFriend(me, userId)\n}\n\nexport const addSerial = (user: User, serialID: string) => \nasync() => {\n  await firebaseService.addSerial(user, serialID)\n}\n\nexport const removeSerial = (user: User, serialID: string) => \nasync() => {\n  await firebaseService.removeSerial(user, serialID)\n}","import { range } from \"rxjs\"\nimport { Filter } from \"../common/intarfaces\"\nimport { Serial } from \"../common/intarfaces\"\n\nconst URL = 'https://api.tvmaze.com/'\nconst searchSeriesURL = 'https://api.tvmaze.com/search/shows?q='\nconst getSerialURL = 'https://api.tvmaze.com/shows/'\n\nconst seriesByPageURL = 'https://api.tvmaze.com/shows?page='\nconst LIMIT = 40\n\nasync function searchSeries(...filters: Filter<Serial>[]) {\n  const res: Serial[] = []\n\n  for (let i = 0; i < 230 && res.length !== LIMIT; i++) {\n    const response = await fetch(seriesByPageURL + i)\n    const jsonArr: Serial[] = await response.json()\n    jsonArr.every(s => {\n      if (filters.every( f => f(s) )) res.push(s)\n      return res.length !== LIMIT\n    })\n  }\n\n  return res\n}\n\nasync  function getSerialById(id: number) {\n  const response = await fetch(getSerialURL + id)\n  const json: Serial = await response.json()\n  return json\n}\n\nconst tvmazeService = {\n  searchSeries,\n  getSerialById\n}\n\nexport default tvmazeService","import { Dispatch } from \"react\";\nimport { Serial, Filter, User } from \"../../common/intarfaces\";\nimport firebaseService from \"../../services/firebaseService\";\nimport tvmazeService from \"../../services/tvmazeService\";\nimport { SearchAction } from \"../types/serialsSearch\";\n\nexport const searchSerials = (...filters: Filter<Serial>[]) =>\nasync(dispatch: Dispatch<SearchAction>) => {\n  try {\n    dispatch({type: \"SEARCH\"})\n    const series = await tvmazeService.searchSeries(...filters)\n    dispatch({type: \"SEARCH_SERIALS_SUCCESS\", payload: series})\n  } catch (error) {\n    dispatch({type: \"SEARCH_ERROR\", payload: error})\n  }\n}\n\nexport const searchUsers = (...filters: Filter<User>[]) => \nasync(dispatch: Dispatch<SearchAction>) => {\n  try {\n    dispatch({type: \"SEARCH\"})\n    const users = await firebaseService.searchUsers(...filters)\n    dispatch({type: \"SEARCH_USERS_SUCCESS\", payload: users})\n  } catch (error) {\n    dispatch({type: \"SEARCH_ERROR\", payload: error})\n  }\n}","import { Dispatch } from \"react\";\nimport { number } from \"yup/lib/locale\";\nimport tvmazeService from \"../../services/tvmazeService\";\nimport { SerialAction } from \"../types/serial\";\n\nexport const getSerialbyId = (id: number) =>\nasync(dispatch: Dispatch<SerialAction>) => {\n  try {\n    dispatch({type: \"FETCH_SERIAL\"})\n    const serial = await tvmazeService.getSerialById(id)\n    dispatch({type: \"FETCH_SERIAL_SUCCESS\", payload: serial})\n  } catch (error) {\n    dispatch({type: \"FETCH_SERIAL_ERROR\", payload: error})\n  }\n}","import * as UserActionCreators from \"./user\"\nimport * as SerialsSearchActionCreators from \"./search\"\nimport * as SerialActionCreator from './serial'\n\nexport default {\n  ...UserActionCreators,\n  ...SerialsSearchActionCreators,\n  ...SerialActionCreator,\n}","import { useDispatch } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport ActionCreators from \"../store/actionCreators\"\n\nexport const useActions = () => {\n  const dispatch = useDispatch()\n  return bindActionCreators(ActionCreators, dispatch)\n}","import { MainBar } from \"./MainBar\";\n\nexport default MainBar","import React, { FC, HTMLAttributes, useState } from \"react\";\nimport * as Icons from \"react-bootstrap-icons\"\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\"\nimport { useSelector } from 'react-redux'\nimport Search from \"../Search\";\nimport \"./MainBar.scss\"\nimport { useTSelector } from \"../../hooks\";\n\nexport interface MainBarProps extends HTMLAttributes<HTMLDivElement> {}\n\nexport const MainBar: FC<MainBarProps> = ({\n  children, \n  className,\n  ...props\n}) => {\n  const history = useHistory()\n  const { user } = useTSelector(s => s.user)\n\n  const onNewspaperClick = () => history.push('/news')\n  const onSeriesClick = () => history.push('/series')\n  const onUsersClick = () => history.push('/users')\n  const onHomeClick = () => history.push('/users/' + user?.id)\n  const onSignInClick = () => history.push('/sign-in')\n\n\n  className = \"main-bar d-flex justify-content-evenly align-items-center \" + className\n\n  return (\n    <div className={className} {...props}>\n      {!!user ? \n      <Icons.Newspaper \n        color=\"white\" \n        size={32}\n        onClick={onNewspaperClick} /> : null}\n      <Icons.Search color=\"white\"\n        size={32}\n        onClick={onSeriesClick} />\n      <Icons.GenderMale color=\"white\"\n        size={32}\n        onClick={onUsersClick} />\n      {!!user ? \n      <Icons.House color=\"white\"\n        size={32}\n        onClick={onHomeClick} /> : \n      <Icons.Signpost color=\"white\"\n        size={32}\n        onClick={onSignInClick} />}\n    </div>\n  )\n}","import { NewsPage } from \"./NewsPage\";\n\nexport default NewsPage","import React, { FC } from \"react\";\n\nexport const NewsPage: FC = () => {\n  return (\n    <h1>\n      News page\n    </h1>\n  )\n}","import { Filter, FilterProps } from \"./Filter\";\n\nexport default Filter\nexport type { FilterProps }","import React, { FC, HTMLAttributes, useCallback, useState } from \"react\";\nimport \"./Filter.scss\"\n\nexport interface FilterProps extends HTMLAttributes<HTMLDivElement> {\n  by: string[]\n  selected: string[]\n  setSelected: (s: string[]) => void\n}\n\nexport const Filter: FC<FilterProps> = ({\n  by,\n  selected,\n  setSelected,\n  className,\n  ...props\n}) => {\n  const handleClick = useCallback((e: any) => {\n    const text = e.target.innerText\n\n    selected.includes(text) ?\n        setSelected(selected.filter(i => i !== text)) :\n        setSelected([...selected, text])\n  }, [selected])\n\n  const components = by.map(e => {\n    const className = selected.includes(e) ?\n      'filter__item filter__item_selected' : 'filter__item'\n\n    return (\n      <div \n        className={className}\n        onClick={handleClick}>\n        <span>{ e }</span>\n      </div>\n    )\n  })\n\n  className = 'filter ' + className\n\n  return (\n    <div className={className} {...props}>\n      {components}\n    </div>\n  )\n}","import { Search, SearchProps } from \"./Search\";\n\nexport default Search\nexport type { SearchProps }","import React, { FC, InputHTMLAttributes } from 'react';\nimport './Search.scss';\n\nexport interface SearchProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string,\n  error?: string | null;\n}\n\nexport const Search: FC<SearchProps> = ({\n  name,\n  error,\n  placeholder,\n  className,\n  ...props\n}) => {\n  className = 'search ' + className\n  className += error ? ' error' : ''\n\n  placeholder = placeholder ? placeholder : name\n\n  return (\n    <label className=\"search-wrapper\">\n      <input\n          className={className}\n          id={'search__' + name}\n          name={name}\n          placeholder={placeholder}\n          {...props}\n      />\n      <p className=\"search__error-text\">{ error }</p>\n    </label>\n  )\n}\n","import { SerialCard, SerialCardProps } from \"./SerialCard\";\n\nexport default SerialCard\nexport type { SerialCardProps }","import React, { FC, HTMLAttributes } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { useTSelector } from \"../../hooks\";\nimport { useActions } from \"../../hooks/useActions\";\nimport \"./SerialCard.scss\"\n\nexport interface SerialCardProps extends HTMLAttributes<HTMLDivElement> {\n  id: string\n  name: string\n  image: string\n  genres: string[]\n  rating: number | string\n}\n\nexport const SerialCard: FC<SerialCardProps> = ({\n  id,\n  name, \n  image, \n  genres, \n  rating,\n  className,\n  ...props\n}) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const { user } = useTSelector(state => state.user)\n  const { addSerial } = useActions()\n\n  const handleClick = () => {\n    history.push('/series/' + id)\n  }\n  const ratingComponent = rating ? \n    <span className=\"rating\">{rating}</span> : null\n  image = image ?? 'https://en.islcollective.com/preview/201506/f/what-a-film-without-popcorn-information-gap-activities-reading-comprehension-e_80462_1.jpg'\n\n  return (\n    <div \n      className={'serial-card ' + className}\n      onClick={handleClick}\n      {...props}>\n      <img src={image} alt={image} />\n\n      {ratingComponent}\n\n      <div>\n        <h6>{name}</h6>\n        <p>{genres.join(', ')}</p>\n      </div>\n    </div>\n  )\n}","import { Serial, Filter } from \"../common/intarfaces\";\n\nexport const nameFilter = (name: string): Filter<{name: string}> => \nobj => {\n  const serialNormalName = obj.name.toLowerCase()\n  const normalName = name.toLowerCase()\n\n  return serialNormalName.startsWith(normalName) || serialNormalName.includes(normalName)\n}\n\nexport const genresFilter = (genres: string[]): Filter<Serial> =>\nserial => {\n  const serialG = serial.genres.map(g => g.toLowerCase())\n  const normalG = genres.map(g => g.toLowerCase())\n\n  return serialG.some(g => normalG.includes(g)) || normalG.length === 0\n}\n  ","import { SeriesList, SeriesListProps } from \"./SeriesList\";\n\nexport default SeriesList\nexport type { SeriesListProps }","import React, { FC, HTMLAttributes, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Filter, Serial } from \"../../common/intarfaces\";\nimport FilterComponent from \"../../components/Filter\";\nimport Search from \"../../components/Search\";\nimport SerialCard from \"../../components/SerialCard\";\nimport { useTSelector } from \"../../hooks\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { genresFilter, nameFilter } from \"../../tools/Filters\";\nimport \"./SeriesList.scss\"\n\nexport interface SeriesListProps extends HTMLAttributes<HTMLDivElement> {\n  filters?: Filter<Serial>[]\n}\n\nexport const SeriesList: FC<SeriesListProps> = ({\n  filters = [],\n  className,\n  ...props\n}) => {\n  const [name, setName] = useState('')\n  const [genres, setGenres] = useState<string[]>([])\n  const { series } = useTSelector(s => s.search)\n  const { searchSerials } = useActions() \n  useEffect(() => {\n    searchSerials(nameFilter(name), genresFilter(genres), ...filters)\n  }, [name, genres, ...filters])\n\n  const handleChange = (e: any) => {\n    const name: string = e.target.value\n    setName(name)\n  }\n\n  className = 'series-list ' + className\n  console.log('1')\n\n  return (  \n    <div className={className}>\n      <Search name=\"film-search\" onChange={handleChange} />\n      <FilterComponent by={[\n        'Drama', 'Comedy', 'Romance', \n        'Science-Fiction', 'Thriller', \n        'Crime', 'Action', 'Fantasy', \n        'Horror', 'Adventure', 'Anime',\n        'Family', 'Mystery', 'Music'\n        ]} selected={genres} setSelected={setGenres} />\n      <div className=\"series-list__container\">\n        {series.map(s => (\n          <SerialCard \n            id={s.id}\n            name={s.name}\n            image={s.image?.medium}\n            genres={s.genres}\n            rating={s.rating.average} />\n        ))}\n      </div>\n    </div>\n  )\n}","import { SearchSeriesPage } from \"./SearchSeriesPage\";\n\nexport default SearchSeriesPage","import React, { FC } from \"react\";\nimport SeriesList from \"../../layouts/SeriesList\";\nimport \"./SearchSeriesPage.scss\"\n\nexport const SearchSeriesPage: FC = () => {\n\n  return ( \n    <div className=\"search-page\">\n      <SeriesList />\n    </div> \n  )\n}","import { Button, ButtonProps } from \"./Button\";\n\nexport default Button\nexport type { ButtonProps }","import React, { FC, ButtonHTMLAttributes } from 'react';\nimport './Button.scss';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  label: string;\n  btnType?: 'primary' | 'secondary' | 'tertiary';\n  type?: 'button' | 'submit'\n  size?: 'small' | 'medium' | 'big';\n}\n\nexport const Button: FC<ButtonProps> = ({\n  label = 'button',\n  btnType = 'primary',\n  size = 'medium',\n  className = '',\n  ...props\n}: ButtonProps) => {\n  className = `button button--${btnType} button--${size} ` + className;\n\n  return (\n    <button className={className} {...props}>\n      {label}\n    </button>\n  );\n};\n","import { UserCard } from \"./UserCard\";\n\nexport default UserCard","import React, { FC, HTMLAttributes, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { User } from \"../../common/intarfaces\";\nimport { useTSelector } from \"../../hooks\";\nimport { useActions } from \"../../hooks/useActions\";\nimport Button from \"../Button\";\nimport \"./UserCard.scss\"\n\nexport interface UserCardPrpos extends HTMLAttributes<HTMLDivElement> {\n  user: User | null\n}\n\nexport const UserCard: FC<UserCardPrpos> = ({\n  user,\n  className,\n  ...props\n}) => {\n  const { user: me } = useTSelector(state => state.user)\n  const { addFriend, removeFriend, signOut } = useActions()\n  const history = useHistory()\n\n  const { id, name, imageURL } = user as User\n  const isFriend = me?.friendIDs?.includes(id) ?? false\n  const isMe = me?.id === user?.id\n\n  const handleClick = (e: any) => {\n    history.push('/users/' + id)\n  }\n  const handleFriend = (e: any) => {\n    e.stopPropagation()\n    if(!me) history.push('/sign-in')\n\n    if(me !== null && user !== null) isFriend ?\n      removeFriend(me, user.id) :\n      addFriend(me, user.id)\n  }\n  const handleSignOut = () => {\n    signOut()\n    history.push('/sign-in')\n  }\n\n  className = 'user-card ' + className\n\n  return (\n    <div \n      className={className} \n      onClick={handleClick}\n      {...props}>\n      <img src={imageURL ?? 'https://m.poisk.vid.ru/img/icons/no_avatar.jpg'} alt={name} />\n      <h6>{name}</h6>\n      {isMe ?\n      <Button \n        className=\"user-card__btn\" \n        label=\"SIGN OUT\"\n        onClick={handleSignOut} /> :\n      <Button \n        className=\"user-card__btn\" \n        label={isFriend ? 'unsubscribe' : 'subscribe'}\n        onClick={handleFriend} /> } \n    </div>\n  )\n}","import { UserList } from \"./UserList\";\n\nexport default UserList","import React, { FC, HTMLAttributes, useEffect, useState } from \"react\";\nimport { Filter, User } from \"../../common/intarfaces\";\nimport Search from \"../../components/Search\";\nimport UserCard from \"../../components/UserCard\";\nimport { useTSelector } from \"../../hooks\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { nameFilter } from \"../../tools/Filters\";\nimport \"./UserList.scss\"\n\nexport interface UserListProps extends HTMLAttributes<HTMLDivElement> {\n  filters?: Filter<User>[]\n}\n\nexport const UserList: FC<UserListProps> = ({\n  filters = [],\n  className,\n  ...props\n}) => {\n  const { users } = useTSelector(s => s.search)\n  const { searchUsers } = useActions()\n  useEffect(() => {\n    searchUsers(...filters)\n  }, [])\n\n  const handleChange = (e: any) => {\n    const name: string = e.target.value\n    searchUsers(nameFilter(name), ...filters)\n  }\n\n  className = 'user-list ' + className\n\n  return (\n    <div className={className} {...props}>\n      <Search name=\"user-searche\" onChange={handleChange} />\n\n      {users.map(u => (\n        <UserCard user={u} />\n      ))}\n    </div>\n  )\n}","import { SearchUserPage } from \"./SearchUserPage\";\n\nexport default SearchUserPage","import React, { FC, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Filter, User } from \"../../common/intarfaces\";\nimport { useTSelector } from \"../../hooks\";\nimport { useActions } from \"../../hooks/useActions\";\nimport UserList from \"../../layouts/UserList\";\nimport \"./SearchUserPage.scss\"\n\nexport const SearchUserPage: FC = () => {\n  const { pathname } = useLocation()\n  const [filter, setFilter] = useState<Filter<User>>(u => true)\n  useEffect(() => {\n    if(pathname.includes('friends')) {\n      const userID = pathname.split('/').slice(-1)[0]\n    }\n  }, [pathname])\n\n\n  return (\n    <div className=\"search-user-page\">\n      <UserList filters={[filter]}/>\n    </div>\n  )\n}","import { SerialLayout, SerialLayoutProps } from \"./SerialLayout\";\n\nexport default SerialLayout\nexport type { SerialLayoutProps }","import React, { FC, HTMLAttributes } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Serial, User } from \"../../common/intarfaces\";\nimport Button from \"../../components/Button\";\nimport { useActions, useTSelector } from \"../../hooks\";\nimport \"./SerialLayout.scss\"\n\nexport interface SerialLayoutProps extends HTMLAttributes<HTMLDivElement> {\n  serial: Serial | null\n}\n\nexport const SerialLayout: FC<SerialLayoutProps> = ({\n  serial,\n  className,\n  ...props\n}) => {\n  const { user: me } = useTSelector(s => s.user)\n  const { addSerial, removeSerial } = useActions()\n  const history = useHistory()\n\n  const isLiked = me?.serialIDs?.includes(serial?.id as string) || false\n  const handleRemove = () => removeSerial(me as User, serial?.id as string)\n  const handleAdd = () => {\n    !!me ? \n    removeSerial(me as User, serial?.id as string) :\n    history.push('/sign-in')\n  }\n\n  className = 'serial-layout ' + className\n\n  return (\n    <>\n      <img \n        className=\"serial-layout__background\" \n        src={serial?.image.original} \n        alt={serial?.name} />\n    \n    <div className={className}>\n      <div className=\"serial-layout__image-block\">\n        <img src={serial?.image.original} />\n        <div className=\"serial-layout__buttons\">\n          {isLiked ? \n            <Button label=\"unlike\" onClick={handleRemove} /> :\n            <Button label=\"like\" onClick={handleAdd}/>\n          }\n          <Button label=\"share\" />\n        </div>\n      </div>\n\n      <div className=\"serial-layout__text-block\">\n        <h2 className=\"serial-layout__title\">\n          {serial?.name}\n        </h2>\n        <p className=\"serial-layout__genres\">\n          {serial?.genres.join(', ')}\n        </p>\n        <p dangerouslySetInnerHTML={{__html: serial?.summary || ''}} />\n      </div>\n    </div>\n    </>\n  )\n}","import { SerialPage } from \"./SerialPage\"; \n\nexport default SerialPage ","import React, { FC, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport { useTSelector } from \"../../hooks\";\nimport { useActions } from \"../../hooks/useActions\";\nimport SerialLayout from \"../../layouts/SerialLayout\";\nimport tvmazeService from \"../../services/tvmazeService\";\n\nexport const SerialPage: FC = () => {\n  const { serial, loading } = useTSelector(state => state.serial)\n  const { getSerialbyId } = useActions()\n  const { pathname } = useLocation()\n  useEffect(() => {\n    const id = pathname.split('/').slice(-1)[0]\n    getSerialbyId(parseInt(id))\n  }, [pathname])\n\n  return (\n    <div className=\"serial-page\">\n      {loading ?\n        <p>loading...</p> :\n        <SerialLayout serial={serial}/>}\n    </div>\n  )\n}","import { Input, InputProps } from \"./Input\";\n\nexport default Input\nexport type { InputProps }","import React, { FC, InputHTMLAttributes } from 'react';\nimport './Input.scss';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string,\n  error?: string | null;\n}\n\nexport const Input: FC<InputProps> = ({\n  name,\n  error,\n  placeholder,\n  className,\n  ...props\n}) => {\n  className = 'input ' + className\n  className += error ? ' error' : ''\n\n  placeholder = placeholder ? placeholder : name\n\n  return (\n    <label className=\"input-wrapper\">\n      <input\n          className={className}\n          id={'input__' + name}\n          name={name}\n          placeholder={placeholder}\n          {...props}\n      />\n      <p className=\"input__error-text\">{ error }</p>\n    </label>\n  )\n}\n","import * as Yup from 'yup'\n\nexport const registerShema = Yup.object({\n  name: Yup.string().min(2).required('Email is required'),\n  email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n  password: Yup.string().min(8).required('Password is required'),\n  password2: Yup.string().oneOf([Yup.ref('password')], 'Passwords must match').required(\"Confirm password\")\n})","import * as Yup from 'yup'\n\nexport const loginShema = Yup.object({\n  email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n  password: Yup.string().min(8).required('Password is required')\n})","import { Title, TitleProps } from \"./Title\";\n\nexport default Title\nexport type { TitleProps }","import React, { FC, HTMLAttributes } from \"react\";\nimport \"./Title.scss\"\n\nexport interface TitleProps extends HTMLAttributes<HTMLParagraphElement> {\n  label: string\n}\n\nexport const Title: FC<TitleProps> = ({\n  label,\n  className,\n  ...props\n}) => {\n  className = 'title ' + className\n\n  return <p className={className} >  {label} </p>\n}","import { Text, TextProps } from \"./Text\"\n\nexport default Text\nexport type { TextProps }","import React, { FC, HTMLAttributes } from \"react\";\nimport \"./Text.scss\"\n\nexport interface TextProps extends HTMLAttributes<HTMLParagraphElement> {\n  label: string\n}\n\nexport const Text: FC<TextProps> = ({\n  label,\n  className,\n  ...props\n}) => {\n  className = 'text ' + className\n\n  return <p className={className} >  {label} </p>\n}","import { SignInForm, SignInFormProps } from \"./SignInForm\";\n\nexport default SignInForm\nexport type { SignInFormProps }","import React, { FC, HTMLAttributes } from \"react\";\nimport { Field, Form, Formik } from \"formik\"\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport { loginShema } from \"../../common/shemes\";\nimport Title from \"../Title\";\nimport Text from \"../Text\";\nimport \"./SignInForm.scss\"\nimport { SignInValues } from \"../../common/intarfaces\";\n  \nexport interface SignInFormProps extends HTMLAttributes<HTMLDivElement> {\n  onFormSubmit: (values: SignInValues) => void\n}\n\nexport const SignInForm: FC<SignInFormProps> = ({ \n  onFormSubmit,\n  className,\n  ...props\n }) => {\n  const initialValues: SignInValues = {\n    email: '',\n    password: '',\n  }\n\n  className = 'sign-in-form ' + className\n\n  return (\n    <div className={className} {...props}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={loginShema}\n        onSubmit={onFormSubmit}\n      >\n        <Form>\n          <Title label=\"Sign in\" className=\"mb-2\"/>\n          <Text \n            label=\"Use the information you entered during the registration to enter your account.\" \n            className=\"mb-4\" />\n\n          <Field \n            name=\"email\"\n            type=\"email\"\n            className=\"w-100 mb-2\"\n            as={Input} />\n          <Field \n            name=\"password\"\n            type=\"text\"\n            className=\"w-100 mb-4\"\n            as={Input} />\n          <Button type=\"submit\" label=\"Sign Up\" className=\"w-100\" />\n\n        </Form>\n      </Formik>\n    </div>\n  )\n}","import SignInPage from \"./SignInPage\";\n\nexport default SignInPage","import React, { FC, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport SignInForm from \"../../components/SignInForm\";\nimport { useTSelector } from \"../../hooks\";\nimport { useActions } from \"../../hooks/useActions\";\nimport \"./SignInPage.scss\"\n\nconst SignInPage:FC = () => {\n  const history = useHistory()\n  const { user, loading, error } = useTSelector(state => state.user)\n  const { signIn } = useActions()\n  useEffect(() => {\n    if (user) history.push('/users/' + user.id)\n  }, [user])\n  \n  if (error) console.log(error)\n\n  return (\n    <div className=\"sign-in-page\">\n     \n        <SignInForm onFormSubmit={signIn} /> \n    </div>\n  )\n}\n\nexport default SignInPage\n","import { SignUpForm, SignUpFormProps } from \"./SignUpForm\";\n\nexport default SignUpForm\nexport type { SignUpFormProps }","import React, { FC, HTMLAttributes } from \"react\";\nimport { Field, Form, Formik } from \"formik\"\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport { registerShema } from \"../../common/shemes\";\nimport \"./SignUpForm.scss\"\nimport Title from \"../Title\";\nimport Text from \"../Text\";\nimport { SignUpValues } from \"../../common/intarfaces\";\n\nexport interface SignUpFormProps extends HTMLAttributes<HTMLDivElement> {\n  onFormSubmit: (values: SignUpValues) => void\n}\n\nexport const SignUpForm: FC<SignUpFormProps> = ({ \n  onFormSubmit,\n  className,\n  ...props \n}) => {\n  const initialValues: SignUpValues = {\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  }\n\n  className = 'sign-up-form ' + className\n\n  return (\n    <div className={className} {...props}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={registerShema}\n        onSubmit={onFormSubmit} >\n\n        <Form>\n          <Title label=\"Sign up\" className=\"mb-2\"/>\n          <Text \n            label=\"Fill in the fields to create your account.\" \n            className=\"mb-4\" />\n\n          <Field \n            name=\"name\"\n            type=\"text\"\n            className=\"w-100 mb-2\"\n            as={Input} />\n          <Field \n            name=\"email\"\n            type=\"email\"\n            className=\"w-100 mb-2\"\n            as={Input} />\n          <Field \n            name=\"password\"\n            type=\"text\"\n            className=\"w-100 mb-2\"\n            as={Input} />\n          <Field \n            name=\"password2\"\n            type=\"text\"\n            className=\"w-100 mb-4\"\n            as={Input} />\n          <Button type=\"submit\" label=\"Sign Up\" className=\"w-100\" />\n\n        </Form>\n      </Formik>\n    </div>\n  )\n}","import SignUpPage from \"./SignUpPage\"\n\nexport default SignUpPage","import React, { FC, useCallback, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport SignUpForm from \"../../components/SignUpForm\";\nimport { useTSelector } from \"../../hooks\";\nimport { useActions } from \"../../hooks/useActions\";\nimport \"./SignUpPage.scss\"\n\nconst SignUpPage: FC = () => {\n  const history = useHistory()\n  const { user, error, loading } = useTSelector(state => state.user)\n  const { signUp } = useActions()\n  useEffect(() => {\n    if (user) history.push('/users/' + user.id)\n  }, [user])\n\n  if (error) console.log(error)\n\n  return (\n    <div className=\"sign-up-page\">\n      {loading ? \n        <p>loading</p> : \n        <SignUpForm onFormSubmit={signUp} />}\n    </div>\n  )\n}\n\nexport default SignUpPage\n","import { UserAccount, UserAccountProps } from \"./UserAccount\";\n\nexport default UserAccount\nexport type { UserAccountProps }","import React, { FC, HTMLAttributes } from \"react\";\nimport { User } from \"../../common/intarfaces\";\nimport Button from \"../../components/Button\";\nimport UserCard from \"../../components/UserCard\";\nimport { UserInfo } from \"../../components/UserInfo/UserInfo\";\nimport { useTSelector } from \"../../hooks\";\nimport { useActions } from \"../../hooks/useActions\";\nimport firebaseService from \"../../services/firebaseService\";\nimport \"./UserAccount.scss\"\n\nexport interface UserAccountProps extends HTMLAttributes<HTMLDivElement> {\n  user: User\n}\n\nexport const UserAccount:FC<UserAccountProps> = ({\n  user,\n  className,\n  ...props\n}) => {\n  const { signOut } = useActions()\n\n  className = 'user-account ' + className\n\n  return (\n    <div className={className} {...props}>\n      <UserCard user={user}/>\n      \n    </div>\n  )\n}","import { UserPage } from \"./UserPage\";\n\nexport default UserPage","import React, { FC, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { User } from \"../../common/intarfaces\";\nimport { useActions, useTSelector } from \"../../hooks\";\nimport UserAccount from \"../../layouts/UserAccount\";\nimport \"./UserPage.scss\"\n\nexport const UserPage: FC = () => {\n  const { pathname } = useLocation()\n  const { searchUsers } = useActions()\n  const { users, loading } = useTSelector(s => s.search)\n\n  const { user } = useTSelector(s => s.user)\n  console.log(user)\n  \n  useEffect(() => {\n    console.log('useeffect')\n    const userID = pathname.split('/').slice(-1)[0]\n    console.log('lol' + userID)\n    searchUsers(u => u.id === userID)\n  }, [pathname])\n\n  console.log(loading)\n\n  return (\n    <div className=\"user-page\">\n      {\n        loading ?\n          <p>loading</p> :\n          <UserAccount user={users[0]}/>\n      }\n    </div>\n  )\n}","import React, { useEffect } from 'react';\nimport { Switch, Route, Link, Redirect } from 'react-router-dom'\nimport MainBar from './components/MainBar';\nimport { useActions, useTSelector } from './hooks';\nimport HomePage from './pages/HomePage';\nimport NewsPage from './pages/NewsPage';\nimport SearchSeriesPage from './pages/SearchSeriesPage';\nimport SearchUserPage from './pages/SearchUserPage';\nimport SerialPage from './pages/SerialPage';\nimport SignInPage from './pages/SignInPage';\nimport SignUpPage from './pages/SignUpPage';\nimport UserPage from './pages/UserPage';\n\nfunction App() {\n  const { user } = useTSelector(s => s.user)\n  const { setUser } = useActions()\n\n  useEffect(() => {\n    const userStr = localStorage.getItem('user')\n    if (userStr) setUser( JSON.parse(userStr) )\n  }, [])\n\n  return (\n    <Switch>\n      <Route exact path=\"/sign-up\" component={SignUpPage} />\n      <Route exact path=\"/sign-in\" component={SignInPage} />\n    \n      <Route path='/'>\n        {!!user ? <Route path=\"/news\" component={NewsPage} /> : null}\n        <Route exact path=\"/users\" component={SearchUserPage} />\n        <Route exact path=\"/series\" component={SearchSeriesPage} />\n\n        <Route exact path=\"/series/:id\" component={SerialPage} />\n        <Route exact path=\"/users/:id\" component={UserPage} />\n\n        <Route exact path=\"/friends/:id\" component={SearchUserPage} />\n        \n        <MainBar /> \n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import { SerialAction, SerialState } from \"../types/serial\"\n\nconst initialState: SerialState = {\n  serial: null,\n  loading: true,\n  error: null\n}\n\nexport const serialReduser = (state = initialState, action: SerialAction): SerialState => {\n  switch (action.type) {\n    case \"FETCH_SERIAL\":\n      return {serial: null, loading: true, error: null}\n\n    case \"FETCH_SERIAL_SUCCESS\":\n      return {serial: action.payload, loading: false, error: null}\n\n    case \"FETCH_SERIAL_ERROR\":\n      return {serial: null, loading: false, error: action.payload}\n\n    default:\n      return state\n  }\n}","import { SearchAction as SearchAction, SerialsSearchState as SearchState } from \"../types/serialsSearch\"\n\nconst initialState: SearchState = {\n  series: [],\n  actors: null,\n  users: [],\n  loading: true,\n  error: null\n}\n\nexport const serialsSearchReduser = (state = initialState, action: SearchAction): SearchState => {\n  switch (action.type) {\n    case \"SEARCH\":\n      return {...state, loading: true}\n\n    case \"SEARCH_SERIALS_SUCCESS\":\n      return {...state, series: action.payload, loading: false}\n\n    case \"SEARCH_USERS_SUCCESS\":\n      return {...state, users: action.payload, loading: false}\n\n    case \"SEARCH_ERROR\": \n      return {...state, error: true}\n\n    default:\n      return state\n  }\n}","import { User } from \"../../common/intarfaces\"\nimport { UserAction, UserState } from \"../types/user\"\n\nconst initialState: UserState = {\n  user: null,\n  currentUser: null,\n  error: null,\n  loading: true, \n}\n\nexport const userReducer = (state = initialState, action: UserAction): UserState => {\n  switch (action.type) {\n    case \"FETCH_USER\": \n      return {...state, loading: true, user: null}\n\n    case \"FETCH_USER_SUCCESS\":\n      return {...state, loading: false, user: action.payload}\n\n    case \"FETCH_CURRENT_USER_SUCCESS\":\n      return {...state, loading: false, currentUser: action.payload}\n\n    case \"FETCH_USER_ERROR\":\n      return {...state, error: action.payload}\n\n    case \"FORGET_USER\":\n      return {...state, user: null, loading: false}\n\n    default:\n      return state\n  }\n}","import { combineReducers } from \"redux\";\nimport { serialReduser } from \"./serialReduser\";\nimport { serialsSearchReduser } from \"./searchlReduser\";\nimport { userReducer } from \"./userReduser\";\n\nconst rootReduser = combineReducers({\n  user: userReducer,\n  search: serialsSearchReduser,\n  serial: serialReduser,\n})\n\nexport default rootReduser \nexport type RootState = ReturnType<typeof rootReduser>","import { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReduser from \"./reducers\";\n\nconst store = createStore(rootReduser , applyMiddleware(thunk))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from \"react-redux\"\n\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}