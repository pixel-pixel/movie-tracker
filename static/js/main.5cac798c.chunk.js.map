{"version":3,"sources":["components/Button/index.ts","components/Button/Button.tsx","services/firebaseService.ts","services/index.ts","tools/Auth.jsx","pages/HomePage/index.ts","pages/HomePage/HomePage.tsx","components/Input/index.ts","components/Input/Input.tsx","common/shemes/registerShema.ts","common/shemes/loginShema.ts","components/SignInForm/index.ts","components/SignInForm/SignInForm.tsx","pages/SignInPage/SignInPage.tsx","pages/SignInPage/index.ts","components/SignUpForm/index.ts","components/SignUpForm/SignUpForm.tsx","pages/SignUpPage/SignUpPage.tsx","pages/SignUpPage/index.ts","tools/Route.jsx","App.tsx","index.tsx"],"names":["Button","label","btnType","size","className","props","app","initializeApp","apiKey","authDomain","projectId","messagingSenderId","appId","measurementId","auth","getAuth","firebaseService","signUp","email","password","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","signOut","onAuthChanged","func","onAuthStateChanged","AuthContext","createContext","AuthProvider","children","useState","user","setUser","useEffect","Provider","value","HomePage","useContext","onClick","Input","name","error","placeholder","id","registerShema","Yup","min","required","max","password2","oneOf","loginShema","SignInForm","onSubmit","initialValues","validationSchema","type","as","withRouter","history","useCallback","values","a","push","alert","SignInPage","SignUpForm","SignUpPage","PrivateRoute","RouteComponent","component","render","routeProps","to","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cac798c.chunk.js","sourcesContent":["import { Button, ButtonProps } from \"./Button\";\n\nexport default Button\nexport type { ButtonProps }","import React, { FC, ButtonHTMLAttributes } from 'react';\nimport './Button.scss';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  label: string;\n  btnType?: 'primary' | 'secondary' | 'tertiary';\n  type?: 'button' | 'submit'\n  size?: 'small' | 'medium' | 'big';\n}\n\nexport const Button: FC<ButtonProps> = ({\n  label = 'button',\n  btnType = 'primary',\n  size = 'medium',\n  className = '',\n  ...props\n}: ButtonProps) => {\n  className = `button button--${btnType} button--${size} ` + className;\n\n  return (\n    <button className={className} {...props}>\n      {label}\n    </button>\n  );\n};\n","import { initializeApp } from \"firebase/app\"\nimport { \n  createUserWithEmailAndPassword, \n  getAuth, \n  signInWithEmailAndPassword,\n  onAuthStateChanged\n} from \"firebase/auth\"\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyBUMloGU8stnSbFWe38XJXHj_Eqz-dzRJ8\",\n  authDomain: \"movie-tracker-ce0ff.firebaseapp.com\",\n  projectId: \"movie-tracker-ce0ff\",\n  messagingSenderId: \"1068318498783\",\n  appId: \"1:1068318498783:web:342f903d978eed52acae6a\",\n  measurementId: \"G-JCTS9HDTG9\"\n})\n\nconst auth = getAuth(app)\n\nconst signUp = (email: string, password: string) => {\n  return createUserWithEmailAndPassword(auth, email, password)\n}\nconst signIn = (email: string, password: string) => {\n  return signInWithEmailAndPassword(auth, email, password)\n}\nconst signOut = () => auth.signOut()\nconst onAuthChanged = (func: any) => onAuthStateChanged(auth, func)\n\nconst firebaseService ={\n  signUp,\n  signIn,\n  signOut,\n  onAuthChanged\n}\n\nexport default firebaseService","import firebaseService from \"./firebaseService\"\n\nexport default firebaseService\n\n","import { createContext, useEffect, useState } from \"react\";\nimport firebaseService from \"../services\";\n\nexport const AuthContext = createContext()\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    firebaseService.onAuthChanged(setUser)\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{ user }} >\n      {children}\n    </AuthContext.Provider>\n  )\n}","import { HomePage } from \"./HomePage\";\n\nexport default HomePage","import React, { FC, useContext } from \"react\";\nimport Button from \"../../components/Button\";\nimport firebaseService from \"../../services\";\nimport { AuthContext } from \"../../tools/Auth\";\n\nexport const HomePage: FC = () => {\n  const {user} = useContext(AuthContext)\n\n  return (\n    <>\n      <h1>\n        Hello {user.email}\n      </h1>\n      <Button onClick={() => firebaseService.signOut()} label=\"sign out\" />\n    </>\n  )\n}","import { Input, InputProps } from \"./Input\";\n\nexport default Input\nexport type { InputProps }","import React, { FC, InputHTMLAttributes } from 'react';\nimport './Input.scss';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string,\n  error?: string | null;\n}\n\nexport const Input: FC<InputProps> = ({\n  name,\n  error,\n  placeholder,\n  className,\n  ...props\n}) => {\n  className = 'input ' + className\n  className += error ? ' error' : ''\n\n  placeholder = placeholder ? placeholder : name\n\n  return (\n    <label className=\"input-wrapper\">\n      <input\n          className={className}\n          id={'input__' + name}\n          name={name}\n          placeholder={placeholder}\n          {...props}\n      />\n      <p className=\"input__error-text\">{ error }</p>\n    </label>\n  )\n}\n","import * as Yup from 'yup'\n\nexport const registerShema = Yup.object({\n  name: Yup.string().min(2).required('Email is required'),\n  email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n  password: Yup.string().min(8).required('Password is required'),\n  password2: Yup.string().oneOf([Yup.ref('password')], 'Passwords must match').required(\"Confirm password\")\n})","import * as Yup from 'yup'\n\nexport const loginShema = Yup.object({\n  email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n  password: Yup.string().min(8).required('Password is required')\n})","import { SignInForm, SignInFormProps, SignInFormValues } from \"./SignInForm\";\n\nexport default SignInForm\nexport type { SignInFormProps, SignInFormValues }","import React, { FC } from \"react\";\nimport { Field, Form, Formik } from \"formik\"\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport { loginShema } from \"../../common/shemes\";\n\nexport interface SignInFormValues {\n  email: string,\n  password: string,\n}\n  \nexport interface SignInFormProps {\n  onSubmit: (values: SignInFormValues) => void\n}\n\nexport const SignInForm: FC<SignInFormProps> = ({ onSubmit }) => {\n  const initialValues: SignInFormValues = {\n    email: '',\n    password: '',\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={loginShema}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <Field \n          name=\"email\"\n          type=\"email\"\n          as={Input} />\n        <Field \n          name=\"password\"\n          type=\"text\"\n          as={Input} />\n\n        <Button type=\"submit\" label=\"ok\" />\n      </Form>\n    </Formik>\n  )\n}","import React, { FC, useCallback } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport SignInForm, { SignInFormValues } from \"../../components/SignInForm\";\nimport firebaseService from \"../../services\";\n\nconst SignInPage:FC<RouteComponentProps> = ({ history }) => {\n  const onSubmit = useCallback(async(values: SignInFormValues) => {\n    const {email, password} = values\n\n    try {\n      await firebaseService.signIn(email, password)\n      history.push('/error')\n    } catch (e) {\n      alert(e)\n    }\n  }, [history])\n\n  return <SignInForm onSubmit={onSubmit}/>\n}\n\nexport default withRouter(SignInPage)","import SignInPage from \"./SignInPage\";\n\nexport default SignInPage","import { SignUpForm, SignUpFormProps, SignUpFormValues } from \"./SignUpForm\";\n\nexport default SignUpForm\nexport type { SignUpFormProps, SignUpFormValues }","import React, { FC } from \"react\";\nimport { Field, Form, Formik } from \"formik\"\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport { registerShema } from \"../../common/shemes\";\n\nexport interface SignUpFormValues {\n  name: string,\n  email: string,\n  password: string,\n  password2: string\n}\n\nexport interface SignUpFormProps {\n  onSubmit: (values: SignUpFormValues) => void\n}\n\nexport const SignUpForm: FC<SignUpFormProps> = ({ onSubmit }) => {\n  const initialValues: SignUpFormValues = {\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={registerShema}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <Field \n          name=\"name\"\n          type=\"text\"\n          as={Input} />\n        <Field \n          name=\"email\"\n          type=\"email\"\n          as={Input} />\n        <Field \n          name=\"password\"\n          type=\"text\"\n          as={Input} />\n        <Field \n          name=\"password2\"\n          type=\"text\"\n          as={Input} />\n\n        <Button type=\"submit\" label=\"ok\" />\n      </Form>\n    </Formik>\n  )\n}","import React, { FC, useCallback } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport SignUpForm, { SignUpFormValues } from \"../../components/SignUpForm\";\nimport firebaseService from \"../../services\";\n\nconst SignUpPage: FC<RouteComponentProps> = ({ history }) => {\n  const onSubmit = useCallback(async(values: SignUpFormValues) => {\n    const {email, password} = values\n\n    try {\n      await firebaseService.signUp(email, password)\n      history.push('/error')\n    } catch (e) {\n      alert(e)\n    }\n  }, [history])\n\n  return <SignUpForm onSubmit={onSubmit}/>\n}\n\nexport default withRouter(SignUpPage)","import SignUpPage from \"./SignUpPage\"\n\nexport default SignUpPage","import { useContext } from \"react\"\nimport { Redirect, Route } from \"react-router\"\nimport { AuthContext } from \"./Auth\"\n\nexport const PrivateRoute = ({ component: RouteComponent, ...props }) => {\n  const {user} = useContext(AuthContext)\n  const render = routeProps => user ? \n    <RouteComponent {...routeProps} /> :\n    <Redirect to=\"/sign-in\" />\n\n  return <Route {...props} render={render} />\n}","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom'\n\nimport HomePage from './pages/HomePage';\nimport SignInPage from './pages/SignInPage';\nimport SignUpPage from './pages/SignUpPage';\nimport { PrivateRoute } from './tools/Route';\n\nfunction App() {\n  return (\n    <>\n      <ul>\n        <li>\n          <Link to=\"/sign-up\"> Sign up </Link>\n        </li>\n        <li>\n          <Link to=\"/sign-in\"> Sign in </Link>\n        </li>\n        <li>\n          <Link to=\"/\"> Error </Link>\n        </li>\n      </ul>\n\n      <Switch>\n        <Route exact path=\"/sign-up\" component={SignUpPage} />\n        <Route exact path=\"/sign-in\" component={SignInPage} />\n        <PrivateRoute component={HomePage} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport App from './App';\nimport { AuthProvider } from './tools/Auth';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <Router>\n        <App />\n      </Router>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}